{"version":3,"sources":["components/Square.jsx","components/Board.jsx","helpers/helpers.js","components/Game.jsx","components/index.jsx","index.js"],"names":["Square","value","id","onClick","className","type","Board","props","squares","map","row","i","key","j","calculateWinner","output","winner","positions","forEach","a","b","c","d","e","f","Game","state","history","Array","fill","xIsNext","Math","random","stepNumber","movesOrderIsDescending","replaying","autoReplayed","replay","bind","this","current","document","querySelector","classList","add","recursion","step","nextStep","length","setState","setTimeout","historyChanged","slice","square","lastMove","addEventListener","remove","status","every","moves","move","jumpTo","handleClick","style","fontSize","animation","reverse","React","Component","index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7e510f3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Square.css';\n\nconst Square = ({ value, id, onClick }) => {\n  return (\n    <button\n      className={`square played-${value}`}\n      type=\"button\"\n      id={id}\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n};\n\nSquare.propTypes = {\n  value: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Square;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nconst Board = props => {\n  return props.squares.map((row, i) => (\n    <div className=\"board-row\" key={`row-${i}`}>\n      {row.map(({ value }, j) => (\n        <Square\n          id={`square-${i}-${j}`}\n          key={`square-${i}-${j}`}\n          value={value}\n          onClick={() => props.onClick(i, j)}\n        />\n      ))}\n    </div>\n  ));\n};\n\nexport default Board;\n","function calculateWinner(squares) {\n  const lines = [\n    [[0, 0], [0, 1], [0, 2]],\n    [[1, 0], [1, 1], [1, 2]],\n    [[2, 0], [2, 1], [2, 2]],\n    [[0, 0], [1, 0], [2, 0]],\n    [[0, 1], [1, 1], [2, 1]],\n    [[0, 2], [1, 2], [2, 2]],\n    [[0, 0], [1, 1], [2, 2]],\n    [[0, 2], [1, 1], [2, 0]],\n  ];\n\n  let output = { winner: null, positions: false };\n  lines.forEach(([[a, b], [c, d], [e, f]]) => {\n    if (\n      squares[a][b].value &&\n      squares[a][b].value === squares[c][d].value &&\n      squares[a][b].value === squares[e][f].value\n    )\n      output = {\n        winner: squares[a][b].value,\n        positions: [[a, b], [c, d], [e, f]],\n      };\n  });\n  return output;\n}\n\nexport default calculateWinner;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport Board from './Board';\nimport calculateWinner from '../helpers/helpers';\nimport './Game.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(3).fill(Array(3).fill({ value: null })),\n        },\n      ],\n      xIsNext: Math.random() < 0.5,\n      stepNumber: 0,\n      movesOrderIsDescending: true,\n      replaying: false,\n      autoReplayed: false,\n    };\n\n    this.replay = this.replay.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { history, stepNumber } = this.state;\n\n    const current = history[stepNumber];\n    const squares = [...current.squares];\n    const { positions } = calculateWinner(squares);\n    if (positions)\n      positions.forEach(([a, b]) =>\n        document.querySelector(`#square-${a}-${b}`).classList.add('winning'),\n      );\n  }\n\n  replay(recursion = 'initial') {\n    const { history } = this.state;\n    const step = recursion === 'initial' ? 0 : recursion;\n    const nextStep = step + 1;\n    if (nextStep === history.length) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n        replaying: false,\n        autoReplayed: true,\n      });\n    } else {\n      this.setState(\n        {\n          stepNumber: step,\n          xIsNext: step % 2 === 0,\n          replaying: true,\n        },\n        () => {\n          if (nextStep < history.length) {\n            setTimeout(() => {\n              this.replay(nextStep);\n            }, 500);\n          }\n        },\n      );\n    }\n  }\n\n  handleClick(i, j) {\n    const { xIsNext, replaying, stepNumber, history } = this.state;\n\n    if (replaying) return;\n\n    const historyChanged = history.slice(0, stepNumber + 1);\n    const current = historyChanged[historyChanged.length - 1];\n    const squares = [\n      ...current.squares.map(row => row.map(square => ({ ...square }))),\n    ];\n    const { winner: alreadyWon } = calculateWinner(squares);\n\n    if (alreadyWon || squares[i][j].value) return;\n\n    squares[i][j].value = xIsNext ? 'X' : 'O';\n    this.setState({\n      history: [...historyChanged, { squares, lastMove: [i, j] }],\n      xIsNext: !xIsNext,\n      stepNumber: historyChanged.length,\n    });\n  }\n\n  jumpTo(step, lastMove) {\n    const { history, replaying } = this.state;\n\n    if (replaying) return;\n\n    if (lastMove) {\n      const [a, b] = lastMove;\n      const current = history[step];\n      const squares = [\n        ...current.squares.map(row => row.map(square => ({ ...square }))),\n      ];\n\n      this.setState(\n        {\n          history: [\n            ...history.slice(0, step),\n            { squares, lastMove },\n            ...history.slice(step + 1),\n          ],\n          stepNumber: step,\n          xIsNext: step % 2 === 0,\n        },\n        () => {\n          const square = document.querySelector(`#square-${a}-${b}`);\n          square.addEventListener('animationend', () =>\n            square.classList.remove('selected'),\n          );\n          square.classList.add('selected');\n        },\n      );\n    } else {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n      });\n    }\n  }\n\n  render() {\n    const {\n      history,\n      xIsNext,\n      replaying,\n      stepNumber,\n      autoReplayed,\n      movesOrderIsDescending,\n    } = this.state;\n\n    const current = history[stepNumber];\n    const squares = [...current.squares];\n    const { winner } = calculateWinner(squares);\n    let status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n    if (winner) {\n      status = `The Winner is: ${winner}`;\n      if (!autoReplayed) setTimeout(() => this.replay(), 500);\n    } else if (squares.every(row => row.every(({ value }) => value)))\n      status = 'Draw!';\n\n    const moves = history.map(({ lastMove }, move) => (\n      <li key={move}>\n        <button\n          className=\"last-move-button\"\n          onClick={() => this.jumpTo(move, lastMove)}\n          type=\"button\"\n        >\n          {move\n            ? `Go to move #${move} ${\n                lastMove ? `(${lastMove[0] + 1}, ${lastMove[1] + 1})` : ''\n              }`\n            : 'Go to game start'}\n        </button>\n      </li>\n    ));\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={squares} onClick={(i, j) => this.handleClick(i, j)} />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <div className=\"options-buttons\">\n            <button\n              className=\"option-button\"\n              onClick={() => {\n                this.setState({\n                  movesOrderIsDescending: !movesOrderIsDescending,\n                });\n              }}\n              type=\"button\"\n            >\n              {movesOrderIsDescending ? '🡅' : '🡇'}\n            </button>\n            <button\n              className=\"option-button\"\n              onClick={() => {\n                if (!replaying) this.replay();\n              }}\n              style={{ fontSize: '18px' }}\n              type=\"button\"\n            >\n              <div\n                style={{\n                  animation: replaying ? '1s spin infinite linear' : 'none',\n                }}\n              >\n                ⥁\n              </div>\n            </button>\n          </div>\n          <ol className=\"last-moves\">\n            {movesOrderIsDescending ? moves : [...moves].reverse()}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\nimport './index.css';\n\nconst index = () => {\n  return <Game />;\n};\n\nexport default index;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicTacToe from './components';\n\nReactDOM.render(<TicTacToe />, document.getElementById('app'));\n"],"sourceRoot":""}