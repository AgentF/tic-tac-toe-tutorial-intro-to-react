{"version":3,"sources":["components/Square.jsx","components/Board.jsx","helpers/helpers.js","components/Game.jsx","components/index.jsx","index.js"],"names":["Square","props","className","value","id","onClick","Board","squares","map","row","i","key","j","calculateWinner","output","winner","positions","forEach","a","b","c","d","e","f","Game","state","history","Array","fill","xIsNext","Math","random","stepNumber","movesOrderIsDescending","replaying","autoReplayed","replay","bind","this","current","document","querySelector","classList","add","recursion","step","nextStep","length","setState","setTimeout","slice","square","lastMove","addEventListener","remove","status","every","moves","move","jumpTo","handleClick","style","fontSize","animation","reverse","React","Component","index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b7b4190.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nconst Square = (props) => {\n  return (\n    <button className={`square played-${props.value}`} id={props.id}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nconst Board = (props) => {\n  return (\n    props.squares.map((row, i) =>\n      <div className=\"board-row\" key={`row-${i}`}>\n        {row.map(({ value }, j) =>\n          <Square\n            id={`square-${i}-${j}`}\n            key={`square-${i}-${j}`}\n            value={value}\n            onClick={() => props.onClick(i, j)}\n          />\n        )}\n      </div>\n    )\n  );\n}\n\nexport default Board;\n","export function calculateWinner(squares) {\n  const lines = [\n    [[0, 0], [0, 1], [0, 2]],\n    [[1, 0], [1, 1], [1, 2]],\n    [[2, 0], [2, 1], [2, 2]],\n    [[0, 0], [1, 0], [2, 0]],\n    [[0, 1], [1, 1], [2, 1]],\n    [[0, 2], [1, 2], [2, 2]],\n    [[0, 0], [1, 1], [2, 2]],\n    [[0, 2], [1, 1], [2, 0]],\n  ];\n\n  let output = { winner: null, positions: false };\n  lines.forEach(([[a, b], [c, d], [e, f]]) => {\n    if (squares[a][b].value && squares[a][b].value === squares[c][d].value && squares[a][b].value === squares[e][f].value)\n      output = { winner: squares[a][b].value, positions: [[a, b], [c, d], [e, f]] };\n  })\n  return output;\n};\n","import React from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helpers/helpers';\nimport './Game.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(3).fill(Array(3).fill({ value: null })),\n        },\n      ],\n      xIsNext: Math.random() < 0.5,\n      stepNumber: 0,\n      movesOrderIsDescending: true,\n      replaying: false,\n      autoReplayed: false,\n    };\n\n    this.replay = this.replay.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      history,\n      stepNumber,\n    } = this.state;\n\n    const current = history[stepNumber];\n    const squares = [...current.squares];\n    const { positions } = calculateWinner(squares);\n    if (positions)\n      positions.forEach(([a, b]) => document.querySelector(`#square-${a}-${b}`).classList.add('winning'))\n  }\n\n  replay(recursion = 'initial') {\n    const {\n      history,\n    } = this.state;\n    const step = recursion === 'initial' ? 0 : recursion;\n    const nextStep = step + 1;\n    if (nextStep === history.length) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n        replaying: false,\n        autoReplayed: true,\n      })\n    } else {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n        replaying: true,\n      }, () => {\n        if (nextStep < history.length) {\n          setTimeout(() => {\n            this.replay(nextStep);\n          }, 500);\n        }\n      });\n\n    }\n  }\n\n  handleClick(i, j) {\n    const {\n      xIsNext,\n      replaying,\n      stepNumber,\n    } = this.state;\n\n    if(replaying)\n      return;\n\n    const history = this.state.history.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = [...current.squares.map(row => row.map(square => ({ ...square })))];\n    const { winner: alreadyWon } = calculateWinner(squares);\n\n    if (alreadyWon || squares[i][j].value)\n      return;\n\n    squares[i][j].value = xIsNext ? 'X' : 'O';\n    this.setState({\n      history: [\n        ...history,\n        { squares, lastMove: [i, j] }\n      ],\n      xIsNext: !xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n\n  jumpTo(step, lastMove) {\n    const {\n      history,\n      replaying,\n    } = this.state;\n    \n    if(replaying)\n      return;\n\n    if (lastMove) {\n      const [a, b] = lastMove;\n      const current = history[step];\n      const squares = [...current.squares.map(row => row.map(square => ({ ...square })))];\n\n      this.setState({\n        history: [\n          ...history.slice(0, step),\n          { squares, lastMove },\n          ...history.slice(step + 1),\n        ],\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      }, () => {\n        const square = document.querySelector(`#square-${a}-${b}`);\n        square.addEventListener('animationend', () => square.classList.remove('selected'));\n        square.classList.add('selected');\n      });\n    } else {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      });\n\n    }\n  }\n\n  render() {\n    const {\n      history,\n      xIsNext,\n      replaying,\n      stepNumber,\n      autoReplayed,\n      movesOrderIsDescending,\n    } = this.state;\n\n    const current = history[stepNumber];\n    const squares = [...current.squares];\n    const { winner } = calculateWinner(squares);\n    let status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n    if (winner) {\n      status = `The Winner is: ${winner}`;\n      if (!autoReplayed)\n        setTimeout(() => this.replay(), 500);\n    }\n    else if (squares.every(row => row.every(({ value }) => value)))\n      status = 'Draw!';\n\n    const moves = history.map(({ lastMove }, move) =>\n      <li key={move}>\n        <button className=\"last-move-button\"\n          onClick={() => this.jumpTo(move, lastMove)}\n        >\n          {move ?\n            `Go to move #${move} ${lastMove ? `(${lastMove[0] + 1}, ${lastMove[1] + 1})` : ''}`\n            : 'Go to game start'\n          }\n        </button>\n      </li>\n    );\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={squares}\n            onClick={(i, j) => this.handleClick(i, j)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <div className=\"options-buttons\">\n            <button className=\"option-button\"\n              onClick={() => this.setState({ movesOrderIsDescending: !movesOrderIsDescending })}\n            >\n              {movesOrderIsDescending ? '🡅' : '🡇'}\n            </button>\n            <button className=\"option-button\"\n              onClick={() => {\n                if (!replaying)\n                  this.replay();\n              }}\n              style={{ fontSize: '18px' }}\n            >\n              <div style={{ animation: replaying ? '1s spin infinite linear' : 'none' }}>⥁</div>\n            </button>\n          </div>\n          <ol className=\"last-moves\">\n            {movesOrderIsDescending ?\n              moves\n              : [...moves].reverse()\n            }\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\nimport './index.css';\n\nconst index = (props) => {\n  return (\n    <Game />\n  );\n}\n\nexport default index;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicTacToe from './components/'\n\nReactDOM.render(\n  <TicTacToe />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}